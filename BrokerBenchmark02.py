# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'BrokerBenchmark02.ui'
#
# Created by: PyQt5 UI code generator 5.6
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_BrokerBenchmarkTester(object):
    def setupUi(self, BrokerBenchmarkTester):
        BrokerBenchmarkTester.setObjectName("BrokerBenchmarkTester")
        BrokerBenchmarkTester.resize(798, 600)
        self.centralwidget = QtWidgets.QWidget(BrokerBenchmarkTester)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(690, 510, 75, 23))
        self.pushButton.setObjectName("pushButton")
        self.progressBar = QtWidgets.QProgressBar(self.centralwidget)
        self.progressBar.setGeometry(QtCore.QRect(40, 510, 541, 23))
        self.progressBar.setProperty("value", 0)
        self.progressBar.setObjectName("progressBar")
        self.radioButton = QtWidgets.QRadioButton(self.centralwidget)
        self.radioButton.setGeometry(QtCore.QRect(390, 180, 141, 17))
        self.radioButton.setObjectName("radioButton")
        self.radioButton_2 = QtWidgets.QRadioButton(self.centralwidget)
        self.radioButton_2.setGeometry(QtCore.QRect(390, 150, 121, 17))
        self.radioButton_2.setChecked(True)
        self.radioButton_2.setObjectName("radioButton_2")
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox.setGeometry(QtCore.QRect(560, 180, 181, 22))
        self.comboBox.setObjectName("comboBox")
        self.comboBox_2 = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox_2.setGeometry(QtCore.QRect(70, 180, 221, 22))
        self.comboBox_2.setObjectName("comboBox_2")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(70, 160, 101, 16))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(560, 160, 101, 16))
        self.label_2.setObjectName("label_2")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(600, 510, 75, 23))
        self.pushButton_2.setObjectName("pushButton_2")
        self.checkBox = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox.setGeometry(QtCore.QRect(600, 480, 131, 17))
        self.checkBox.setObjectName("checkBox")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(70, 230, 101, 16))
        self.label_3.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(560, 230, 121, 21))
        self.label_4.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(60, 20, 261, 16))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(60, 50, 691, 51))
        self.label_6.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(70, 250, 221, 131))
        self.label_7.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        self.label_8.setGeometry(QtCore.QRect(560, 250, 221, 131))
        self.label_8.setText("")
        self.label_8.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.label_8.setObjectName("label_8")
        BrokerBenchmarkTester.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(BrokerBenchmarkTester)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 798, 21))
        self.menubar.setObjectName("menubar")
        self.menuDatei = QtWidgets.QMenu(self.menubar)
        self.menuDatei.setObjectName("menuDatei")
        self.menuInfo = QtWidgets.QMenu(self.menubar)
        self.menuInfo.setObjectName("menuInfo")
        BrokerBenchmarkTester.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(BrokerBenchmarkTester)
        self.statusbar.setObjectName("statusbar")
        BrokerBenchmarkTester.setStatusBar(self.statusbar)
        self.action_ffnen = QtWidgets.QAction(BrokerBenchmarkTester)
        self.action_ffnen.setObjectName("action_ffnen")
        self.actionBeenden = QtWidgets.QAction(BrokerBenchmarkTester)
        self.actionBeenden.setObjectName("actionBeenden")
        self.actionSpeichern = QtWidgets.QAction(BrokerBenchmarkTester)
        self.actionSpeichern.setObjectName("actionSpeichern")
        self.actionSpeichern_unter = QtWidgets.QAction(BrokerBenchmarkTester)
        self.actionSpeichern_unter.setObjectName("actionSpeichern_unter")
        self.action_ber = QtWidgets.QAction(BrokerBenchmarkTester)
        self.action_ber.setObjectName("action_ber")
        self.menuDatei.addAction(self.action_ffnen)
        self.menuDatei.addAction(self.actionSpeichern)
        self.menuDatei.addAction(self.actionSpeichern_unter)
        self.menuDatei.addSeparator()
        self.menuDatei.addAction(self.actionBeenden)
        self.menuInfo.addAction(self.action_ber)
        self.menubar.addAction(self.menuDatei.menuAction())
        self.menubar.addAction(self.menuInfo.menuAction())

        self.retranslateUi(BrokerBenchmarkTester)
        QtCore.QMetaObject.connectSlotsByName(BrokerBenchmarkTester)

    def retranslateUi(self, BrokerBenchmarkTester):
        _translate = QtCore.QCoreApplication.translate
        BrokerBenchmarkTester.setWindowTitle(_translate("BrokerBenchmarkTester", "Broker Benchmark Tester"))
        self.pushButton.setText(_translate("BrokerBenchmarkTester", "Start"))
        self.radioButton.setText(_translate("BrokerBenchmarkTester", "Daten in Datenbank"))
        self.radioButton_2.setText(_translate("BrokerBenchmarkTester", "ohne Datenablage"))
        self.label.setText(_translate("BrokerBenchmarkTester", "Broker Auswahl:"))
        self.label_2.setText(_translate("BrokerBenchmarkTester", "Datenbank Auswahl:"))
        self.pushButton_2.setText(_translate("BrokerBenchmarkTester", "Stop"))
        self.checkBox.setText(_translate("BrokerBenchmarkTester", "Generiere Log Datei"))
        self.label_3.setText(_translate("BrokerBenchmarkTester", "Broker Beschreibung"))
        self.label_4.setText(_translate("BrokerBenchmarkTester", "Datenbank Beschreibung"))
        self.label_5.setText(_translate("BrokerBenchmarkTester", "Broker Benchmark Tester"))
        self.label_6.setText(_translate("BrokerBenchmarkTester", "<html><head/><body><p>Diese Anwendung misst die Zeit der Testdatenübertragung von dem ausgewählten Broker. Optional können die Testdaten in eine ausgewählte<br> Datenbank eingepflegt werden.</p></body></html>"))
        self.label_7.setText(_translate("BrokerBenchmarkTester", " "))
        self.menuDatei.setTitle(_translate("BrokerBenchmarkTester", "Datei"))
        self.menuInfo.setTitle(_translate("BrokerBenchmarkTester", "Info"))
        self.action_ffnen.setText(_translate("BrokerBenchmarkTester", "Öffnen"))
        self.actionBeenden.setText(_translate("BrokerBenchmarkTester", "Beenden"))
        self.actionSpeichern.setText(_translate("BrokerBenchmarkTester", "Speichern"))
        self.actionSpeichern_unter.setText(_translate("BrokerBenchmarkTester", "Speichern unter"))
        self.action_ber.setText(_translate("BrokerBenchmarkTester", "Über"))

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    BrokerBenchmarkTester = QtWidgets.QMainWindow()
    ui = Ui_BrokerBenchmarkTester()
    ui.setupUi(BrokerBenchmarkTester)
    BrokerBenchmarkTester.show()
    sys.exit(app.exec_())

